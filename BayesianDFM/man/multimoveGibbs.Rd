% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multimoveGibbs.R
\name{multimoveGibbs}
\alias{multimoveGibbs}
\title{Draws factor conditional on parameters}
\usage{
multimoveGibbs(yt, phi, Q, lambda, const, Tt, q, alpha_0, P_0, R)
}
\arguments{
\item{yt}{A matrix of demeaned and standardized time series data.}

\item{phi}{Diagoanl matrix of dimension k x k with vector autoregressive
coefficients.}

\item{Q}{A matrix of .}

\item{lambda}{A vector of dimension n x k of the factor loadings.}

\item{const}{A scalar, where const = 1 for model with intercept, const = 0
for model without intercept.}

\item{Tt}{Number of high-frequency periods.}

\item{q}{lag length for state equation (adjust starting value of phi
accordingly).}

\item{alpha_0}{Vector of dimension m x 1 (Initial conditions for Kalman
filter).}

\item{P_0}{Diagonal matrix of dimension m (Initial conditions for Kalman
filter).}

\item{R}{Diagonal matrix of dimension n of idiosyncratic component.}
}
\value{
A Vector of factors conditional parameters.
}
\description{
The Multi-Move Gibbs sampler applies the kalman filter by forward and
backwards filtering.
}
\examples{
q <- 1
yt <- as.matrix(t(Xmat))
n <- dim(yt)[1]
Tt <- dim(yt)[2]
k <- 2
m <- k*q
alpha_0 <- matrix(0,m,1)
P_0 <- diag(m)
const <- 0
R <- as.matrix(diag(n)*0.01)
phi <- diag(rnorm(k,0,1))
lambdasim <- matrix(rep(rnorm(n,0,1)*0.1,k), nrow = n, ncol = k, byrow = TRUE)
diag(lambdasim) <- 1
lambdasim[upper.tri(lambdasim)] <- 0
lambda <- lambdasim
Q <- as.matrix(diag(0.1,k))
matcomp <- compFstate(phi,Q,lambda,const)
}
